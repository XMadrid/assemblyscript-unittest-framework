name: run-tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: "npm"
      - run: npm ci

      - name: cache emsdk
        uses: actions/cache@v4
        with:
          path: |
            third_party/emsdk/node
            third_party/emsdk/python
            third_party/emsdk/upstream
            third_party/emsdk/.emscripten
          key: cache-${{ runner.os }}-emsdk-${{ hashFiles('scripts/**') }}

      - uses: ./.github/action/setup-ccache
        with:
          size: 128M
          key: ccache-${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ccache-${{ runner.os }}-build-

      - run: sudo apt-get install libgtest-dev

      - run: npm run build
      - run: npm run lint
      - run: npm run test

      - working-directory: ./example
        run: |
          set -e
          npm ci
          npm run test
          npm run test:cjs

      - name: verify ccache stats
        run: |
          set -e
          ccache --show-stats

  Windows_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: "npm"
      # - run: npm ci

      # - name: cache emsdk
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       third_party/emsdk/node
      #       third_party/emsdk/python
      #       third_party/emsdk/upstream
      #       third_party/emsdk/.emscripten
      #     key: cache-${{ runner.os }}-emsdk-${{ hashFiles('scripts/**') }}

      # - uses: ./.github/action/setup-ccache
      #   with:
      #     size: 128M
      #     key: ccache-${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
      #     restore-keys: |
      #       ccache-${{ runner.os }}-build-

      - name: Install Google Test
        run: |
          vcpkg install gtest:x64-windows
          vcpkg list gtest:x64-windows
          echo "GTest_ROOT=C:/vcpkg/installed/x64-windows" >> $GITHUB_ENV

      - name: install ninja
        run: choco install ninja

      # - run: npm run build

      # - run: npm run test:cpp

      - name: run test
        run: |
          cmake -B build -S .  -DCMAKE_PREFIX_PATH=C:/vcpkg/packages/gtest_x64-windows
          cmake --build build --parallel 2 --target wasm-instrumentation-test wasm-opt

          ls ./build/bin/
          ls ./build/bin/Debug

          ./build/bin/Debug/wasm-instrumentation-test.exe

      # - name: run test
      #   run: |
      #     npm run test:as
      #     npm run test:ts
      #     cmake -B build -S . '-DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"' -DVCPKG_TARGET_TRIPLET=x64-windows
      #     cmake --build build --parallel 2 --target wasm-instrumentation-test wasm-opt
      #     build/bin/wasm-instrumentation-test
      #     npm run test:e2e

      - working-directory: ./example
        run: |
          set -e
          npm ci
          npm run test
          npm run test:cjs
